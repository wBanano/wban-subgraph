type WBANToken @entity {
  # wban address
  id: ID!

  # used for other stats like marketcap
  totalSupply: BigDecimal!

  hodlersCount: BigDecimal!

  # token specific volume
  #tradeVolume: BigDecimal!
  #tradeVolumeUSD: BigDecimal!
  #untrackedVolumeUSD: BigDecimal!

  # transactions across all pairs
  #txCount: BigInt!

  # liquidity across all pairs
  #totalLiquidity: BigDecimal!

  # derived prices
  #derivedETH: BigDecimal

  # derived fields
  #tokenDayData: [TokenDayData!]! @derivedFrom(field: "token")
  #pairDayDataBase: [PairDayData!]! @derivedFrom(field: "token0")
  #pairDayDataQuote: [PairDayData!]! @derivedFrom(field: "token1")
  #pairBase: [Pair!]! @derivedFrom(field: "token0")
  #pairQuote: [Pair!]! @derivedFrom(field: "token1")
}

type User @entity {
  id: ID!
  banAddress: String!
  amount: BigDecimal!
  txnCount: BigDecimal!
  # liquidityPositions: [LiquidityPosition!] @derivedFrom(field: "user")
  # usdSwapped: BigDecimal!
  wraps: [Wrap]!
  unwraps: [Unwrap]!
}

type Transaction @entity {
  id: ID! # txn hash
  blockNumber: BigInt!
  timestamp: BigInt!
  wraps: [Wrap]!
  unwraps: [Unwrap]!
}

type Wrap @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  amount: BigDecimal!
  to: Bytes!
}

type Unwrap @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  amount: BigDecimal!
  to: Bytes!
}

type BenisFarm @entity {
  id: ID!
  depositsCount: BigInt!
  withdrawalsCount: BigInt!
}

type BenisUser @entity {
  id: ID!
  farm: BigInt!
  depositsCount: BigInt!
  withdrawalsCount: BigInt!
}

type BenisDeposit @entity {
  id: ID!
  user: User!
  farm: BigInt!
  amount: BigDecimal!
  timestamp: BigInt!
}

type BenisWithdrawal @entity {
  id: ID!
  user: User!
  farm: BigInt!
  amount: BigDecimal!
  timestamp: BigInt!
}
